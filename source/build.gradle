plugins {
  id 'java'
  id 'org.springframework.boot' version '3.2.1' apply false
  id 'io.spring.dependency-management' version '1.1.4' apply false
}

apply from: './deps.gradle'

repositories {
	mavenLocal()
	mavenCentral()
}

allprojects {
   gradle.projectsEvaluated {
      tasks.withType(JavaCompile) {
		  options.debug = true
      }
   }
}

subprojects {
	apply plugin: 'java-library'
    apply plugin: 'maven-publish'
	
	group = 'com.palmyralabs.palmyra.codegenerator'
	version = '0.1.0'

	repositories {
		mavenLocal()
		mavenCentral()
	}
	
	tasks.withType(JavaCompile) {
		options.debug = true		  
	}
	
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter:3.2.1'
		testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.1'
		compileOnly 'org.projectlombok:lombok:1.18.30'	
		annotationProcessor 'org.projectlombok:lombok:1.18.30'
	
	    implementation deps.log.slf4j.api
	    
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
	    testCompileOnly 'org.projectlombok:lombok:1.18.30'
	    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'	    
    	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    	testImplementation 'org.junit.platform:junit-platform-launcher:1.10.1'
	}
	
	java {
		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	
	    withSourcesJar()
	    modularity.inferModulePath.set(true)
	}
		
	
	publishing {
	  publications {
	    maven(MavenPublication) {
	      from components.java
	    }
	  }
	}
  
  	task sourceJar(type: Jar) {
		archiveClassifier = "sources"
		from sourceSets.main.allJava
	}
	
	test {
    	useJUnitPlatform()
	}
}